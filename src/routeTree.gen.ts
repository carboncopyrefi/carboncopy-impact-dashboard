/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProjectsImport } from './routes/projects'
import { Route as ChainsImport } from './routes/chains'
import { Route as IndexImport } from './routes/index'
import { Route as RefiOverviewImport } from './routes/refi/overview'
import { Route as RefiEcologicalCreditsImport } from './routes/refi/ecological-credits'

// Create/Update Routes

const ProjectsRoute = ProjectsImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => rootRoute,
} as any)

const ChainsRoute = ChainsImport.update({
  id: '/chains',
  path: '/chains',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const RefiOverviewRoute = RefiOverviewImport.update({
  id: '/refi/overview',
  path: '/refi/overview',
  getParentRoute: () => rootRoute,
} as any)

const RefiEcologicalCreditsRoute = RefiEcologicalCreditsImport.update({
  id: '/refi/ecological-credits',
  path: '/refi/ecological-credits',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/chains': {
      id: '/chains'
      path: '/chains'
      fullPath: '/chains'
      preLoaderRoute: typeof ChainsImport
      parentRoute: typeof rootRoute
    }
    '/projects': {
      id: '/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsImport
      parentRoute: typeof rootRoute
    }
    '/refi/ecological-credits': {
      id: '/refi/ecological-credits'
      path: '/refi/ecological-credits'
      fullPath: '/refi/ecological-credits'
      preLoaderRoute: typeof RefiEcologicalCreditsImport
      parentRoute: typeof rootRoute
    }
    '/refi/overview': {
      id: '/refi/overview'
      path: '/refi/overview'
      fullPath: '/refi/overview'
      preLoaderRoute: typeof RefiOverviewImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/chains': typeof ChainsRoute
  '/projects': typeof ProjectsRoute
  '/refi/ecological-credits': typeof RefiEcologicalCreditsRoute
  '/refi/overview': typeof RefiOverviewRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/chains': typeof ChainsRoute
  '/projects': typeof ProjectsRoute
  '/refi/ecological-credits': typeof RefiEcologicalCreditsRoute
  '/refi/overview': typeof RefiOverviewRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/chains': typeof ChainsRoute
  '/projects': typeof ProjectsRoute
  '/refi/ecological-credits': typeof RefiEcologicalCreditsRoute
  '/refi/overview': typeof RefiOverviewRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/chains'
    | '/projects'
    | '/refi/ecological-credits'
    | '/refi/overview'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/chains'
    | '/projects'
    | '/refi/ecological-credits'
    | '/refi/overview'
  id:
    | '__root__'
    | '/'
    | '/chains'
    | '/projects'
    | '/refi/ecological-credits'
    | '/refi/overview'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ChainsRoute: typeof ChainsRoute
  ProjectsRoute: typeof ProjectsRoute
  RefiEcologicalCreditsRoute: typeof RefiEcologicalCreditsRoute
  RefiOverviewRoute: typeof RefiOverviewRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ChainsRoute: ChainsRoute,
  ProjectsRoute: ProjectsRoute,
  RefiEcologicalCreditsRoute: RefiEcologicalCreditsRoute,
  RefiOverviewRoute: RefiOverviewRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/chains",
        "/projects",
        "/refi/ecological-credits",
        "/refi/overview"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/chains": {
      "filePath": "chains.tsx"
    },
    "/projects": {
      "filePath": "projects.tsx"
    },
    "/refi/ecological-credits": {
      "filePath": "refi/ecological-credits.tsx"
    },
    "/refi/overview": {
      "filePath": "refi/overview.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
