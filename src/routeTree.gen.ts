/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProjectsRouteImport } from './routes/projects'
import { Route as ChainsRouteImport } from './routes/chains'
import { Route as IndexRouteImport } from './routes/index'
import { Route as RefiRenewableEnergyRouteImport } from './routes/refi/renewable-energy'
import { Route as RefiOverviewRouteImport } from './routes/refi/overview'
import { Route as RefiEcologicalCreditsRouteImport } from './routes/refi/ecological-credits'

const ProjectsRoute = ProjectsRouteImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => rootRouteImport,
} as any)
const ChainsRoute = ChainsRouteImport.update({
  id: '/chains',
  path: '/chains',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const RefiRenewableEnergyRoute = RefiRenewableEnergyRouteImport.update({
  id: '/refi/renewable-energy',
  path: '/refi/renewable-energy',
  getParentRoute: () => rootRouteImport,
} as any)
const RefiOverviewRoute = RefiOverviewRouteImport.update({
  id: '/refi/overview',
  path: '/refi/overview',
  getParentRoute: () => rootRouteImport,
} as any)
const RefiEcologicalCreditsRoute = RefiEcologicalCreditsRouteImport.update({
  id: '/refi/ecological-credits',
  path: '/refi/ecological-credits',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/chains': typeof ChainsRoute
  '/projects': typeof ProjectsRoute
  '/refi/ecological-credits': typeof RefiEcologicalCreditsRoute
  '/refi/overview': typeof RefiOverviewRoute
  '/refi/renewable-energy': typeof RefiRenewableEnergyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/chains': typeof ChainsRoute
  '/projects': typeof ProjectsRoute
  '/refi/ecological-credits': typeof RefiEcologicalCreditsRoute
  '/refi/overview': typeof RefiOverviewRoute
  '/refi/renewable-energy': typeof RefiRenewableEnergyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/chains': typeof ChainsRoute
  '/projects': typeof ProjectsRoute
  '/refi/ecological-credits': typeof RefiEcologicalCreditsRoute
  '/refi/overview': typeof RefiOverviewRoute
  '/refi/renewable-energy': typeof RefiRenewableEnergyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/chains'
    | '/projects'
    | '/refi/ecological-credits'
    | '/refi/overview'
    | '/refi/renewable-energy'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/chains'
    | '/projects'
    | '/refi/ecological-credits'
    | '/refi/overview'
    | '/refi/renewable-energy'
  id:
    | '__root__'
    | '/'
    | '/chains'
    | '/projects'
    | '/refi/ecological-credits'
    | '/refi/overview'
    | '/refi/renewable-energy'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ChainsRoute: typeof ChainsRoute
  ProjectsRoute: typeof ProjectsRoute
  RefiEcologicalCreditsRoute: typeof RefiEcologicalCreditsRoute
  RefiOverviewRoute: typeof RefiOverviewRoute
  RefiRenewableEnergyRoute: typeof RefiRenewableEnergyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/projects': {
      id: '/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chains': {
      id: '/chains'
      path: '/chains'
      fullPath: '/chains'
      preLoaderRoute: typeof ChainsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/refi/renewable-energy': {
      id: '/refi/renewable-energy'
      path: '/refi/renewable-energy'
      fullPath: '/refi/renewable-energy'
      preLoaderRoute: typeof RefiRenewableEnergyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/refi/overview': {
      id: '/refi/overview'
      path: '/refi/overview'
      fullPath: '/refi/overview'
      preLoaderRoute: typeof RefiOverviewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/refi/ecological-credits': {
      id: '/refi/ecological-credits'
      path: '/refi/ecological-credits'
      fullPath: '/refi/ecological-credits'
      preLoaderRoute: typeof RefiEcologicalCreditsRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ChainsRoute: ChainsRoute,
  ProjectsRoute: ProjectsRoute,
  RefiEcologicalCreditsRoute: RefiEcologicalCreditsRoute,
  RefiOverviewRoute: RefiOverviewRoute,
  RefiRenewableEnergyRoute: RefiRenewableEnergyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
